{
  "swagger": "2.0",
  "info": {
    "title": "Media Control",
    "version": "v1.0.0-20181130",
    "license": {
        "name": "BSD-2-CLAUSE",
        "url": "https://openconnectivityfoundation.github.io/core/LICENSE.md",
        "x-copyright": "copyright 2018 Open Connectivity Foundation, Inc. All rights reserved."
    },
    "termsOfService": "https://openconnectivityfoundation.github.io/core/DISCLAIMER.md"
  },
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/MediaControlResURI" : {
      "get": {
        "description": "This resource specifies the media control capabilities of a device.\nRetrieves the current media control settings.\nCurrent state is \"play\" therefore play will not be in response as a transitions.\nThe transitions from \"play\" are the following:\n- stop\n- pause\n- fastforward (trick modes) change, using uri templates:\n  https://tools.ietf.org/html/rfc6570\n  where the expanded url will be:\n  mediaControlResURI?media_speed=2.5\n  where the \"allowed_values\" gives the list of allowed values for the substitution\n- rewind (trick modes) change, using uri templates:\n  https://tools.ietf.org/html/rfc6570\n  where the expanded url will be:\n  mediaControlResURI?media_speed=-0.5\n  where the \"allowed_values\" gives the list of allowed values for the substitution\n- stepforward (trick modes) change, using uri templates:\n  https://tools.ietf.org/html/rfc6570\n  where the expanded url will be:\n  mediaControlResURI?media_location=2.5\n  where the \"range_number\" gives the range of allowed values and \"step_number\" give step increment for the substitution\n- stepbackward (trick modes) change, using uri templates:\n  https://tools.ietf.org/html/rfc6570\n  where the expanded url will be:\n  mediaControlResURI?media_location=-0.5\n  where the \"range_number\" gives the range of allowed values and \"step_number\" give step increment for the substitution\n- seek (location change), using uri templates:\n  https://tools.ietf.org/html/rfc6570\n  where the expanded url will be:\n  mediaControlResURI?media_location=53\n  where the \"range_number\" gives the range of allowed values for the substitution\n",
        "parameters": [
          {"$ref": "#/parameters/interface"}
        ],
        "responses": {
            "200": {
              "description" : "Retrieve/get Response",
              "x-example":
              {
                  "href": "/myMediaControlResURI",
                  "rt":           ["oic.r.media.control"],
                  "id":           "unique_example_id",
                  "play_state":    true,
                  "media_speed":    1.0,
                  "media_location_number": 53,
                  "current_action": "play",
                  "media_actions" :  [
                      {
                          "action": "stop",
                          "href": "mediaControlResURI?play_state=false&media_speed=0&media_location_number=0"
                      },
                      {
                          "action": "pause",
                          "href": "mediaControlResURI?play_state=false"
                      },
                      {
                          "action": "fastforward",
                          "allowed_speed_values" : [ 0.5, 2.5, 5],
                          "href": "mediaControlResURI?{?media_speed}"
                      },
                      {
                          "action": "rewind",
                          "allowed_speed_values" : [ -0.5, -2.5, -5],
                          "href": "mediaControlResURI?{?media_speed}"
                      },
                      {
                          "action": "stepforward",
                          "range_number" : [ 0, 20],
                          "step_number" : 1,
                          "href": "mediaControlResURI?{?media_location_number}"
                      },
                      {
                          "action": "stepbackward",
                          "range_number" : [ 0, 20],
                          "step_number" : 1,
                          "href": "mediaControlResURI?{?media_location_number}"
                      },
                      {
                          "action": "seek",
                          "range_number" : [ 0, 3000],
                          "href": "mediaControlResURI?{?media_location_number}"
                    }
                 ]
              },
              "schema": { "$ref": "#/definitions/MediaControl" }
            }
        }
      },
      "post": {
        "description": "Sets the current media control values\n",
        "parameters": [
          {"$ref": "#/parameters/interface"},
          {"$ref": "#/parameters/QplayState"},
          {"$ref": "#/parameters/QmediaSpeed"},
          {"$ref": "#/parameters/QmediaLocation_Number"},
          {"$ref": "#/parameters/QmediaLocation_DateTime"},
          {"$ref": "#/parameters/QmediaLocation_URI"},
          {"$ref": "#/parameters/QcurrentAction"},
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MediaControl" },
            "x-example":
              {
              "id":           "unique_example_id",
              "play_state":    true,
              "media_speed":    8.0,
              "media_location": 40,
              "current_action": "fastforward"
              }
          }
        ],
        "responses": {
            "200": {
                "description" : "Update/post Response",
                "x-example":
                {
                    "id":           "unique_example_id",
                    "play_state":    true,
                    "media_speed":    8.0,
                    "media_location":  40,
                    "current_action": "fastforward",
                    "media_actions" : [
                        {
                            "action": "stop",
                            "href": "mediaControlResURI?play_state=false&media_speed=0&media_location=0"
                        },
                        {
                            "action": "play",
                            "href": "mediaControlResURI?media_speed=0"
                        },
                        {
                            "action": "pause",
                            "href": "mediaControlResURI?play_state=false"
                        },
                        {
                            "action": "rewind",
                            "allowed_speed_values" : [ -0.5, -2.5, -5],
                            "href": "mediaControlResURI?{?media_speed}"
                        },
                        {
                            "action": "stepforward",
                            "range_number" : [ 0, 20],
                            "step_number" : 1,
                            "href": "mediaControlResURI?{?media_location}"
                        },
                        {
                            "action": "stepbackward",
                            "range_number" : [ 0, 20],
                            "step_number" : 1,
                            "href": "mediaControlResURI?{?media_location}"
                        },
                        {
                            "action": "seek",
                            "range_number" : [ 0, 3000],
                            "href": "mediaControlResURI?{?media_location}"
                        }
                    ]
                },
                "schema": { "$ref": "#/definitions/MediaControl" }
            }
        }
      }
    }
  },
  "parameters": {
    "interface" : {
      "in" : "query",
      "name" : "if",
      "type" : "string",
      "enum" : ["oic.if.rw", "oic.if.baseline"]
    },
    "QplayState" : {
        "in" : "query",
        "name" : "play_state",
        "type" : "string",
        "description": "Play State.",
        "x-example": [
            {
                "play_state": true
            }
        ]
    },
    "QmediaSpeed" : {
        "in" : "query",
        "name" : "media_speed",
        "type" : "string",
        "description": "Media Speed.",
        "x-example": [
          {
              "media_speed": 8.0
          }
        ]
      },
    "QmediaLocation_Number" : {
    "in" : "query",
    "name" : "media_location_number",
    "type" : "string",
    "description": "Media Location - Number",
    "x-example": [
      {
          "media_location_number": 40
      }
    ]
    },
    "QmediaLocation_DateTime" : {
    "in" : "query",
    "name" : "media_location_datetime",
    "type" : "string",
    "description": "Media Location - DateTime",
    "x-example": [
      {
          "media_location_datetime": "2018-06-23T20:22:59"
      }
    ]
    },
    "QmediaLocation_URI" : {
    "in" : "query",
    "name" : "media_location_uri",
    "type" : "string",
    "description": "Media Location - URI",
    "x-example": [
      {
          "media_location_uri": "https://www.youtube.com/watch?v=GRxofEmo3HA?t=286"
      }
    ]
    },
    "QcurrentAction" : {
    "in" : "query",
    "name" : "current_action",
    "type" : "string",
    "description": "Current Action",
    "x-example": [
      {
          "current_action": "fastforward"
      }
    ]
    }
  },
  "definitions": {
    "MediaControl" :
    {
          "properties":
          {
              "play_state" :
              {
                  "description": "Allowed media control play state values.",
                  "type": "boolean"
              },
              "media_speed" :
              {
                  "description": "Allowed media control play speed values.",
                  "type": "number"
              },
              "media_location_number" :
              {
                  "description": "Supports Rate Control for float values and Frame By Frame for integer values for both positive and negative values.",
                  "type": "number"
              },
              "media_location_datetime" :
              {
                  "description": "Reference time for the absolute time in ISO 8601 datetime format (e.g: 'Date Only: 2018-06-23', 'Date and Time: 2018-06-23T20:22:59', 'Date, Time, and Timezone'PST': 2018-06-23T20:22:59-08:00')",
                  "type": "string"
              },
              "media_location_uri" :
              {
                  "description": "This is the target URI, it can be specified as a Relative Reference or fully-qualified URI.",
                  "format": "uri",
                  "maxLength": 256,
                  "type": "string"
              },
              "current_action" :
              {
                  "description": "Current Action received for media control.",
                  "type": "string"
              },
              "media_actions" :
              {
                  "description": "The array of media actions that are supported for media control.",
                  "items": {
                      "$ref": "#/definitions/MediaAction"
                  },
                  "minItems": 1,
                  "type": "array"
              }
        },
        "type" : "object"
      },
    "MediaAction" :
    {
        "properties":
        {
            "action":
            {
                "description": "The name of the media action.",
                "enum": ["stop", "play", "pause", "fastforward", "rewind", "stepforward", "stepbackward", "seek" ],
                "readOnly": true
            },
            "allowed_speed_values": {
                "description": "The allowed values for the action",
                "items": {
                    "type": "number"
                },
                "minItems": 1,
                "readOnly": true,
                "type": "array"
            },
            "range_number": {
                "description": "The allowed range for the action",
                "items": {
                    "type": "number"
                },
                "maxItems": 2,
                "minItems": 2,
                "readOnly": true,
                "type": "array"
            },
            "step_number": {
                "description": "Step value across the defined range",
                "readOnly": true,
                "type": "number"
            },
            "href": {
                "description": "This is the target URI, it can be specified as a Relative Reference or fully-qualified URI. Relative Reference should be used along with the di parameter to make it unique.",
                "format": "uri",
                "maxLength": 256,
                "type": "string"
            }
        },
        "type": "object",
        "required": [ "action" ]
    }
  }
}
